# Generated by Django 4.0.3 on 2022-04-23 21:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExtendedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('phone_number', models.CharField(max_length=200, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Campaing',
            fields=[
                ('id_campaign', models.IntegerField(primary_key=True, serialize=False)),
                ('campaign_name', models.CharField(max_length=200, verbose_name='Название кампании')),
                ('campaign_description', models.CharField(max_length=200, verbose_name='Описание кампании')),
            ],
            options={
                'verbose_name': 'Кампания',
                'verbose_name_plural': 'Кампании',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id_house', models.IntegerField(primary_key=True, serialize=False)),
                ('city', models.CharField(default='default title', max_length=200, verbose_name='Город')),
                ('street', models.CharField(max_length=200, verbose_name='Улица')),
                ('house_number', models.CharField(default='default title', max_length=200, verbose_name='Номер дома')),
                ('entrance', models.IntegerField(verbose_name='Количество подъездов')),
                ('apartment_in_entracne', models.IntegerField(verbose_name='Квартир в подъезде')),
                ('poll', models.BooleanField(verbose_name='Обход')),
            ],
            options={
                'verbose_name': 'Дом',
                'verbose_name_plural': 'Дома',
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id_poll', models.IntegerField(primary_key=True, serialize=False)),
                ('door_open', models.BooleanField(verbose_name='Открыли дверь')),
                ('date', models.DateField(verbose_name='Дата обхода')),
                ('time', models.TimeField(verbose_name='Время обхода')),
                ('reaction', models.CharField(max_length=400, verbose_name='Реакция')),
            ],
            options={
                'verbose_name': 'Обход',
                'verbose_name_plural': 'Обходы',
            },
        ),
        migrations.CreateModel(
            name='PoolForm',
            fields=[
                ('id_form', models.IntegerField(primary_key=True, serialize=False)),
                ('resp_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('resp_phone_number', models.CharField(max_length=200, verbose_name='Телефон')),
                ('comment', models.CharField(max_length=400, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Протокол обходов',
                'verbose_name_plural': 'Протоколы',
            },
        ),
        migrations.CreateModel(
            name='CampaignData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camp_num', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanag.campaing')),
                ('house_camp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanag.house')),
                ('poll_camp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanag.poll')),
                ('poll_form_camp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanag.poolform')),
                ('user_camp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
